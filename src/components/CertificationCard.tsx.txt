import React from 'react';
import { ExternalLink, Award, Calendar, Hash } from 'lucide-react';
import { Certification } from '../data/certifications';

interface CertificationCardProps {
  certification: Certification;
  index: number;
}

export const CertificationCard: React.FC<CertificationCardProps> = ({ 
  certification, 
  index 
}) => {
  const handleValidation = () => {
    if (certification.validationUrl && certification.validationUrl !== '#') {
      window.open(certification.validationUrl, '_blank', 'noopener,noreferrer');
    }
  };

  const hasValidUrl = certification.validationUrl && certification.validationUrl !== '#';

  return (
    <div 
      className="group relative bg-gradient-to-br from-amber-50 to-yellow-100 
                 border border-amber-200 rounded-xl p-6 shadow-lg hover:shadow-2xl 
                 transform hover:scale-[1.02] transition-all duration-300 
                 hover:border-amber-400"
      style={{
        animationDelay: `${index * 100}ms`,
        animation: 'fadeInUp 0.6s ease-out forwards'
      }}
    >
      {/* Award Icon */}
      <div className="absolute top-4 right-4 text-amber-500 group-hover:text-amber-600 
                      transition-colors duration-300">
        <Award size={24} className="drop-shadow-sm" />
      </div>

      {/* Certificate Title */}
      <h3 className="text-xl font-bold text-gray-800 mb-3 pr-10 leading-tight">
        {certification.title}
      </h3>

      {/* Organization */}
      <div className="flex items-center mb-4">
        <div className="w-2 h-2 bg-amber-500 rounded-full mr-3"></div>
        <p className="text-lg font-semibold text-amber-700">
          {certification.organization}
        </p>
      </div>

      {/* Certificate Details */}
      <div className="space-y-2 mb-6">
        {certification.year && (
          <div className="flex items-center text-gray-600">
            <Calendar size={16} className="mr-2 text-amber-500" />
            <span className="text-sm">{certification.year}</span>
          </div>
        )}
        
        {certification.certificateId && (
          <div className="flex items-center text-gray-600">
            <Hash size={16} className="mr-2 text-amber-500" />
            <span className="text-sm font-mono">{certification.certificateId}</span>
          </div>
        )}

        {certification.description && (
          <p className="text-sm text-gray-600 italic mt-2">
            {certification.description}
          </p>
        )}
      </div>

      {/* Validation Button or Certificate ID */}
      {hasValidUrl ? (
        <button
          onClick={handleValidation}
          className="w-full flex items-center justify-center gap-2 px-4 py-3 
                     rounded-lg font-semibold text-white transition-all duration-300 
                     bg-gradient-to-r from-amber-500 to-yellow-500 hover:from-amber-600 hover:to-yellow-600 
                     shadow-md hover:shadow-lg transform hover:translateY-[-1px] cursor-pointer"
        >
          <ExternalLink size={18} />
          Validate Certificate
        </button>
      ) : (
        <div className="w-full px-4 py-3 rounded-lg bg-gray-700/50 border border-amber-500/30">
          <div className="text-center">
            <div className="text-amber-400 font-semibold text-sm mb-1">Certificate Verification</div>
            {certification.certificateId ? (
              <div className="text-gray-300 text-xs font-mono">
                ID: {certification.certificateId}
              </div>
            ) : (
              <div className="text-gray-400 text-xs">
                Contact issuing organization for verification
              </div>
            )}
          </div>
        </div>
      )}

      {/* Hover Effect Overlay */}
      <div className="absolute inset-0 bg-gradient-to-br from-amber-400/5 to-yellow-400/5 
                      rounded-xl opacity-0 group-hover:opacity-100 transition-opacity 
                      duration-300 pointer-events-none"></div>
    </div>
  );
};